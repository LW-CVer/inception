#_*_coding:utf-8_*_
import pandas as pd
#获取训练集种类 class_type
def data_process():
    data=pd.read_csv("/app/datas/6/mini-imagenet/test.csv",encoding="ISO-8859-1")
    t=[]
    for row in data['label']:
        #print(row)
        t.append(row)
    t=set(t)
    t=list(t)
    print(t)
    print(len(t))
#data_process()

#获取csv中的图像名称和对应标签
#训练100类
train_type=[u'n02110341', u'n01930112', u'n04509417', u'n04067472', u'n04515003',
 u'n02074367', u'n03924679', u'n02687172', u'n03075370', u'n07747607', 
 u'n09246464', u'n02457408', u'n04418357', u'n03535780', u'n04435653',
 u'n03207743', u'n04251144', u'n03062245', u'n02174001', u'n03127925',
 u'n03998194', u'n02120079', u'n04146614', u'n04243546', u'n03854065',
 u'n03838899', u'n02871525', u'n03544143', u'n02108089', u'n13133613', 
 u'n03676483', u'n03337140', u'n03272010', u'n01770081', u'n09256479', 
 u'n02091244', u'n02116738', u'n04275548', u'n03773504', u'n02606052', 
 u'n03146219', u'n04149813', u'n07697537', u'n02823428', u'n02089867',
 u'n03017168', u'n01704323', u'n01532829', u'n03047690', u'n03775546', 
 u'n01843383', u'n02971356', u'n13054560', u'n02108551', u'n02101006', 
 u'n03417042', u'n02219486', u'n01558993', u'n04522168', u'n02795169', 
 u'n03888605', u'n01855672', u'n04258138', u'n02110063', u'n07584110', 
 u'n02091831', u'n03584254', u'n02113712', u'n03980874', u'n04612504', 
 u'n02138441', u'n02165456', u'n02108915', u'n03770439', u'n01981276', 
 u'n02129165', u'n02099601', u'n02747177', u'n01749939', u'n03476684', 
 u'n02105505', u'n02950826', u'n04389033', u'n03347037', u'n06794110', 
 u'n02966193', u'n07613480', u'n03400231', u'n04296562', u'n03527444', 
 u'n04443257', u'n02443484', u'n02114548', u'n04604644', u'n01910747', 
 u'n04596742', u'n02111277', u'n03908618', u'n03220513', u'n02981792']


#验证100类
val_type=[u'n02110341', u'n01930112', u'n04509417', u'n04067472', u'n04515003', u'n02074367', u'n03924679', u'n02687172', u'n03075370', u'n07747607', u'n09246464', u'n02457408', u'n04418357', u'n03535780', u'n04435653', u'n03207743', u'n04251144', u'n03062245', u'n02174001', u'n03127925', u'n03998194', u'n02120079', u'n04146614', u'n04243546', u'n03854065', u'n03838899', u'n02871525', u'n03544143', u'n02108089', u'n13133613', u'n03676483', u'n03337140', u'n03272010', u'n01770081', u'n09256479', u'n02091244', u'n02116738', u'n04275548', u'n03773504', u'n02606052', u'n03146219', u'n04149813', u'n07697537', u'n02823428', u'n02089867', u'n03017168', u'n01704323', u'n01532829', u'n03047690', u'n03775546', u'n01843383', u'n02971356', u'n13054560', u'n02108551', u'n02101006', u'n03417042', u'n02219486', u'n01558993', u'n04522168', u'n02795169', u'n03888605', u'n01855672', u'n04258138', u'n02110063', u'n07584110', u'n02091831', u'n03584254', u'n02113712', u'n03980874', u'n04612504', u'n02138441', u'n02165456', u'n02108915', u'n03770439', u'n01981276', u'n02129165', u'n02099601', u'n02747177', u'n01749939', u'n03476684', u'n02105505', u'n02950826', u'n04389033', u'n03347037', u'n06794110', u'n02966193', u'n07613480', u'n03400231', u'n04296562', u'n03527444', u'n04443257', u'n02443484', u'n02114548', u'n04604644', u'n01910747', u'n04596742', u'n02111277', u'n03908618', u'n03220513', u'n02981792']

#测试100类
test_type=[u'n02110341', u'n01930112', u'n04509417', u'n04067472', u'n04515003', u'n02074367', u'n03924679', u'n02687172', u'n03075370', u'n07747607', u'n09246464', u'n02457408', u'n04418357', u'n03535780', u'n04435653', u'n03207743', u'n04251144', u'n03062245', u'n02174001', u'n03127925', u'n03998194', u'n02120079', u'n04146614', u'n04243546', u'n03854065', u'n03838899', u'n02871525', u'n03544143', u'n02108089', u'n13133613', u'n03676483', u'n03337140', u'n03272010', u'n01770081', u'n09256479', u'n02091244', u'n02116738', u'n04275548', u'n03773504', u'n02606052', u'n03146219', u'n04149813', u'n07697537', u'n02823428', u'n02089867', u'n03017168', u'n01704323', u'n01532829', u'n03047690', u'n03775546', u'n01843383', u'n02971356', u'n13054560', u'n02108551', u'n02101006', u'n03417042', u'n02219486', u'n01558993', u'n04522168', u'n02795169', u'n03888605', u'n01855672', u'n04258138', u'n02110063', u'n07584110', u'n02091831', u'n03584254', u'n02113712', u'n03980874', u'n04612504', u'n02138441', u'n02165456', u'n02108915', u'n03770439', u'n01981276', u'n02129165', u'n02099601', u'n02747177', u'n01749939', u'n03476684', u'n02105505', u'n02950826', u'n04389033', u'n03347037', u'n06794110', u'n02966193', u'n07613480', u'n03400231', u'n04296562', u'n03527444', u'n04443257', u'n02443484', u'n02114548', u'n04604644', u'n01910747', u'n04596742', u'n02111277', u'n03908618', u'n03220513', u'n02981792']



def get_data(data_type):
    file_path="/app/datas/6/mini-imagenet/"+data_type+".csv"
    data=pd.read_csv(file_path,encoding="ISO-8859-1")
    img_path=[]
    label=[]
    for i in data['filename']:
        img_path.append(i)
    for i in data['label']:
        label.append(i)
        
    return img_path,label